[tool.poetry]
name = "secunda-test_task"
version = "0.1.0"
description = "secunda-test_task"
authors = [ "Aleksander_Ribinskii <aleksander.ribinskii@yandex.ru>"]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
fastapi = "^0.115.12"
pydantic = "^2.11.3"
asyncpg = "^0.30.0"
sqlalchemy = "^2.0.40"
alembic = "^1.15.2"
pydantic-settings = "^2.8.1"
stringcase = "^1.2.0"
greenlet = "^3.1.1"
uvicorn = "^0.34.0"
httpx = "^0.28.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.4"
mypy = "^1.15.0"
pytest = "^8.2.2"
pytest-asyncio = "^0.24.0"
polyfactory = "^2.16.2"
coverage = "^7.8.0"

[tool.mypy]
mypy_path = "app"
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

[tool.ruff]
line-length = 120
target-version = "py310"
src = ["app"]


[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
select = [
    "E", "F", "W",
    "I",
    "UP",
    "PL",
    "RUF",
]
ignore = ["ANN101", "PERF401"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "pydantic.root_validator",
    "pydantic.validator",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403"]
"**/{tests}/*" = ["S101"]

[tool.ruff.lint.pylint]
max-args = 9

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = 120
line-ending = "lf"

[tool.ruff.lint.isort]
known-first-party = ["app"]
force-wrap-aliases = true
lines-after-imports = 2
combine-as-imports = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_default_fixture_loop_scope = "function"
